%info
Launch an NGINX server

As of now, the dependecy is not handled

%variables
NGINX_NWORKER=16
NGINX_PORT=8188
NGINX_GZIP=off
NGINX_ROOT=./nginx/
NGINX_USER=www-data
KEEPALIVE=30
ssl:NGINX_SSL=1
NGINX_CPU_STEP=1
NGINX_DAEMON=on
NGINX_IRQ_AFFINITY=1

%late_variables
NGINX_SRVTYPE=default_server
NGINX_SERVER_CONFIG?=
NGINX_SSL_CIPHER?=
ssl:NGINX_SRVTYPE=ssl
ssl:NGINX_SERVER_CONFIG=ssl on;ssl_certificate nginx-selfsigned.crt;ssl_certificate_key nginx-selfsigned.key;

%init
mkdir -p nginx || sudo mkdir -p nginx
mkdir -p $NGINX_ROOT || sudo mkdir -p $NGINX_ROOT
echo "RESULT 1"

%-ssl:file genssl.sh

%ssl:file genssl.sh
openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout nginx-selfsigned.key -out nginx-selfsigned.crt -config ./config.req

%script sudo=true name=nginx autokill=false
killall nginx &> /dev/null || true
sleep 1
killall -9 nginx &> /dev/null || true
sleep 1
echo "Generating SSL parameters for NGINX"
bash genssl.sh
if [ $NGINX_IRQ_AFFINITY -eq 1 ] ; then
    service irqbalance stop
    echo "Setting NGINX number of queues"
    ethtool -L ${self:0:ifname} combined $NGINX_NWORKER
    echo "Setting IRQ affinity"
    set_irq_affinity.sh ${self:0:ifname} &
fi
echo "Launching NGINX..."
nginx -c $(pwd)/nginx.conf -p $NGINX_ROOT
r=$?
echo "EVENT NGINX_LAUNCHED"

exit $r

//%clean

%file nginx.conf python-inline
user $NGINX_USER;
worker_processes $NGINX_NWORKER;
worker_rlimit_nofile 70000;
pid nginx.pid;
daemon $NGINX_DAEMON;
worker_cpu_affinity $(( " ".join(["1" + '0' * i for i in range(0, $NGINX_NWORKER*$NGINX_CPU_STEP, $NGINX_CPU_STEP) ]) ));

events {
    worker_connections 65536;
    use epoll;
    multi_accept on;
}

http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    types_hash_max_size 2048;
    # server_tokens off;
    client_body_timeout 12;
    client_header_timeout 5;
    send_timeout 10;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    $(( "ssl_ciphers ${NGINX_SSL_CIPHER};" if "${NGINX_SSL_CIPHER}" else "" ))
    ##
    # Logging Settings
    ##

    access_log off;
    error_log /dev/stdout;

    ##
    # Gzip Settings
    ##

    gzip $NGINX_GZIP;
    gzip_disable "msie6";

    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # Virtual Host Configs
    ##
client_body_buffer_size      128k;
client_max_body_size         10m;
client_header_buffer_size    1k;
large_client_header_buffers  4 4k;
output_buffers               1 32k;
postpone_output              1460;

open_file_cache max=200000 inactive=20s;
open_file_cache_valid 120s;
open_file_cache_min_uses 1;
open_file_cache_errors on;

server {
	listen $NGINX_PORT $NGINX_SRVTYPE reuseport;
	listen [::]:$NGINX_PORT $NGINX_SRVTYPE reuseport;
    ${NGINX_SERVER_CONFIG}

	root ./;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	location / {
        keepalive_timeout $KEEPALIVE;

		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}
}

%ssl:file config.req
[req]
prompt = no
distinguished_name = req_distinguished_name
req_extensions = v3_req

[req_distinguished_name]
C = SE
ST = Stockholm
L = Stockholm
O = KTH
#OU = Org Unit Name
CN = Our Company Llc
#emailAddress = info@example.com

[v3_req]
basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment
subjectAltName = @alt_names

[alt_names]
DNS.1 = example.com
DNS.2 = www.example.com
