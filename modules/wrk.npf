%info
HTTP Request sizes

Generate HTTP requests towards "http://server/bin-XK" files using WRK

The HTTP server configuration is not part of this test. Your main test
should include something like FILE_PATH={file1,file2}

The address to make the request will use the adress from the node having the "dut" role. The port can be changed setting the HTTP_PORT variable.

See generic/http.wrk for examples such as fetching files with sizes from 1K to 1G
See experiments/test_wrk.test for an experiment trying to find best configuration for 1K requests varying GEN_THREADS and GEN_CONCURRENT on a 16 cores CPU

%variables
GEN_CONCURRENT=128
GEN_THREADS=16
FILE_PATH=index.htm
HTTP_PORT=80
GEN_TIME=10
WRKNIC=0
WRK_HOST=EXPAND(${dut:0:ip})
WRK_PROTOCOL=http

%late_variables
WRK_SCRIPT?=

%script deps=wrk-tbarbette title=WRKClient
fname=$RANDOM
which wrk
wrk -c $GEN_CONCURRENT -r --latency -t $(( $GEN_THREADS if $GEN_THREADS <= $GEN_CONCURRENT else $GEN_CONCURRENT)) -d${GEN_TIME}s $(( "-s ${WRK_SCRIPT}" if "${WRK_SCRIPT}" else "" )) ${WRK_PROTOCOL}://${WRK_HOST}:${HTTP_PORT}/${FILE_PATH} | tee $fname
stat=$?
cat $fname | grep "Transfer/sec" | awk '{printf "RESULT-THROUGHPUT %s\n", $2}' | head -n 1
cat $fname | grep "Requests/sec" | awk '{printf "RESULT-REQUEST %s\n", $2}' | head -n 1
cat $fname | grep "Latency" | awk '{printf "RESULT-LATENCY %s\n", $2}' | head -n 1
cat $fname | sed -n -e '/Latency Distribution/,/requests/p' | head -n -1 | tail -n+2 | grep -E "50.00 |99.00 " | awk '{printf "RESULT-LAT%d %s\n", $1, $2}' | head -n 2
cat $fname | grep "Socket errors" | awk '{printf "RESULT-HTTPTIMEOUT %s\n", $10 }' | head -n 1

rm $fname
sleep 2
exit $stat
