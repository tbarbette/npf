%info
UDP Traffic Generator module

This will generate UDP traffic using 1 NICs. There is no
accounting of the result, it just generate UDP packets for GEN_WAIT
seconds (default 5).

GEN_WAIT is the test time, while the client generates $GEN_FLOWS flows of $GEN_BURST packets in loop

%config
default_role_map={dut:client,server:client}
require_tags=import,dpdk

%variables
GEN_BURST=32
GEN_FLOWS=128
GEN_LENGTH=64
GEN_WAIT=5

%late_variables 
GEN_TOT=EXPAND( $(( $GEN_BURST * $GEN_FLOWS )) )

%script deps=fastclick sudo=true delay=2
click --dpdk -c 0x1 -- PKTGEN_CONFIG

%file PKTGEN_CONFIG
elementclass Generator { $port,$th, $srcmac, $dstmac, $srcip, $dstip |
    tdOUT::ToDPDKDevice($port, BLOCKING true);

    adv1 :: FastUDPFlows(RATE 0, LIMIT $GEN_TOT, LENGTH $GEN_LENGTH, SRCETH $srcmac, DSTETH $dstmac, SRCIP $srcip, DSTIP $dstip, FLOWS $GEN_FLOWS, FLOWSIZE $GEN_BURST)
    -> MarkMACHeader
    -> EnsureDPDKBuffer
    -> replay :: ReplayUnqueue(STOP -1, QUICK_CLONE true)
    -> sndavg :: AverageCounter()
    -> tdOUT;

    StaticThreadSched(replay $th)

}

gen0 :: Generator(${client:0:pci}, 0, ${client:0:mac}, ${dut:0:mac}, ${client:0:ip}, ${dut:0:ip})

DriverManager(
    wait $GEN_WAIT,
    print "RESULT-TX $(gen0/sndavg.link_rate)"
)
